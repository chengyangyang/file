<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.3.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
           http://www.springframework.org/schema/mvc 
           http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
           ">
          <context:annotation-config/>  
	<!-- ================spring start扫描============== -->
	<!-- 自动扫描跳过控制层 -->
	<context:component-scan base-package="com.ch">
	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> 
	</context:component-scan> 
	<!-- ================spring end扫描============== -->
	
	<!-- ================spring 整合hibernate start ============== -->
	
	<context:property-placeholder location="classpath:/config.properties" />
	
	<!--配置数据源-->
	
	
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}" />  <!--数据库连接驱动-->
        <property name="jdbcUrl" value="${jdbc.url}" />     <!--数据库地址-->
        <property name="user" value="${jdbc.username}" />   <!--用户名-->
        <property name="password" value="${jdbc.password}" />   <!--密码-->
        <property name="maxPoolSize" value="40" />      <!--最大连接数-->
        <property name="minPoolSize" value="1" />       <!--最小连接数-->
        <property name="initialPoolSize" value="10" />      <!--初始化连接池内的数据库连接-->
        <property name="maxIdleTime" value="20" />  <!--最大空闲时间-->
    </bean>
    
    <!--配置session工厂-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.ch" />
        <property name="hibernateProperties">
            <props>
            <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> <!--hibernate根据实体自动生成数据库表-->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>   <!--指定数据库方言-->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>     <!--在控制台显示执行的数据库操作语句-->
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>     <!--在控制台显示执行的数据哭操作语句（格式）-->
            </props>
        </property>
    </bean>
    
    <!-- 事物管理器配置  -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean> 
    
    <!-- 定义事务 -->  
  <!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">   -->
      <!--  propagation="REQUIRED" 如果存在一个事务，则加入到当前事务中  只读是指，只计算当前事务开始的时候的时间-->
     <!-- <tx:attributes>  
            <tx:method name="test*" propagation="REQUIRED"  read-only="false" />  
        	<tx:method name="get*"  propagation="REQUIRED" /> 
        </tx:attributes>  
    </tx:advice>   -->
    <!-- 定义切面 -->  
  <!-- <aop:config proxy-target-class="true">  
        <aop:pointcut id="pt" expression="execution(* com.ch.*.*(..))" />  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt" />  
    </aop:config>  -->
    
    <!-- 注解实现事务 -->  
     <!--  <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />   -->
 <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"  />  
	</beans>